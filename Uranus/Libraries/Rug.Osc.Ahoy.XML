<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Rug.Osc.Ahoy</name>
    </assembly>
    <members>
        <member name="F:Rug.Osc.Ahoy.AhoyConstants.AhoyBroadcastPort">
            <summary>
            Ahoy broadcast port as defined in protocol. The ASCII value of the MSB and LSB are 'a' and 'h' respectively.
            </summary>
        </member>
        <member name="F:Rug.Osc.Ahoy.AhoyConstants.AhoyResponsePort">
            <summary>
            Ahoy response port as defined in protocol. The ASCII value of the MSB and LSB are 'o' and 'y' respectively.
            </summary>
        </member>
        <member name="F:Rug.Osc.Ahoy.AhoyConstants.Address">
            <summary>
            The address
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for Address
        </member>
        <member name="M:Rug.Osc.Ahoy.AhoyMessage.CreateAhoyBroadcast(System.Net.IPAddress,System.String)">
            <summary>
            Creates the ahoy broadcast.
            </summary>
            <param name="sourceAddress">The source address.</param>
            <param name="namespace">The namespace.</param>
            <returns>OscMessage.</returns>
            <autogeneratedoc />
            TODO Edit XML Comment Template for CreateAhoyBroadcast
        </member>
        <member name="M:Rug.Osc.Ahoy.AhoyMessage.CreateAhoyResponse(System.Net.IPAddress,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Creates the ahoy response.
            </summary>
            <param name="sourceAddress">The source address.</param>
            <param name="sendPort">The send port.</param>
            <param name="listenPort">The listen port.</param>
            <param name="descriptor">The descriptor.</param>
            <param name="namespace">The namespace.</param>
            <returns>OscMessage.</returns>
            <autogeneratedoc />
            TODO Edit XML Comment Template for CreateAhoyResponse
        </member>
        <member name="M:Rug.Osc.Ahoy.AhoyMessage.IsAddressValid(Rug.Osc.OscMessage)">
            <summary>
            Is the address of a message a valid /ahoy address
            </summary>
            <param descriptor="message">A OscMessage</param>
            <returns>True if the message has a valid /ahoy address</returns>
        </member>
        <member name="M:Rug.Osc.Ahoy.AhoyMessage.IsValidResponse(Rug.Osc.OscMessage)">
            <summary>
            Determines whether [is valid response] [the specified message].
            </summary>
            <param name="message">The message.</param>
            <returns><c>true</c> if [is valid response] [the specified message]; otherwise, <c>false</c>.</returns>
            <autogeneratedoc />
            TODO Edit XML Comment Template for IsValidResponse
        </member>
        <member name="M:Rug.Osc.Ahoy.AhoyMessage.TryGetAhoyServiceInfo(System.Net.IPAddress,Rug.Osc.OscMessage,System.Int32,Rug.Osc.Ahoy.AhoyServiceInfo@)">
            <summary>
            Tries the get ahoy service information.
            </summary>
            <param name="message">The message.</param>
            <param name="serviceInfo">The service information.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
            <autogeneratedoc />
            TODO Edit XML Comment Template for TryGetAhoyServiceInfo
        </member>
        <member name="M:Rug.Osc.Ahoy.AhoyMessage.TryGetIPAddress(Rug.Osc.OscMessage,System.Net.IPAddress@)">
            <summary>
            Get the desired return IP address and port from an /ahoy message.
            </summary>
            <param descriptor="message"></param>
            <param descriptor="address"></param>
            <returns>True if a IP address was present.</returns>
        </member>
        <member name="M:Rug.Osc.Ahoy.AhoyMessage.TryGetIPAddressAndPort(Rug.Osc.OscMessage,System.Net.IPAddress@,System.Int32@)">
            <summary>
            Get the desired return IP address and port from an /ahoy message.
            </summary>
            <param descriptor="message"></param>
            <param descriptor="address"></param>
            <param descriptor="port"></param>
            <returns>True if a IP address was present.</returns>
        </member>
        <member name="M:Rug.Osc.Ahoy.AhoyMessage.TryGetResponseDetails(Rug.Osc.OscMessage,System.Net.IPAddress@,System.Int32@,System.Int32@,System.String@)">
            <summary>
            Tries the get response details.
            </summary>
            <param name="message">The message.</param>
            <param name="address">The address.</param>
            <param name="listenPort">The listen port.</param>
            <param name="sendPort">The send port.</param>
            <param name="descriptor">The descriptor.</param>
            <returns><c>true</c> if the , <c>false</c> otherwise.</returns>
            <autogeneratedoc />
            TODO Edit XML Comment Template for TryGetResponseDetails
        </member>
        <member name="T:Rug.Osc.Ahoy.AhoyQuerySingleAdapter">
            <summary>
            Class AhoyUdpQuery.
            </summary>
            <seealso cref="T:Rug.Osc.Ahoy.IAhoyQuery" />
            <autogeneratedoc />
            TODO Edit XML Comment Template for AhoyUdpQuery
        </member>
        <member name="P:Rug.Osc.Ahoy.AhoyQuerySingleAdapter.NetworkAdapterIPAddress">
            <summary>
            Gets the local address.
            </summary>
            <value>The local address.</value>
            <autogeneratedoc />
            TODO Edit XML Comment Template for LocalAddress
        </member>
        <member name="P:Rug.Osc.Ahoy.AhoyQuerySingleAdapter.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
            <autogeneratedoc />
            TODO Edit XML Comment Template for Count
        </member>
        <member name="P:Rug.Osc.Ahoy.AhoyQuerySingleAdapter.HostAddress">
            <summary>
            Gets the host address.
            </summary>
            <value>The host address.</value>
            <autogeneratedoc />
            TODO Edit XML Comment Template for HostAddress
        </member>
        <member name="P:Rug.Osc.Ahoy.AhoyQuerySingleAdapter.ListenAddress">
            <summary>
            Gets the listen address.
            </summary>
            <value>The listen address.</value>
            <autogeneratedoc />
            TODO Edit XML Comment Template for ListenAddress
        </member>
        <member name="P:Rug.Osc.Ahoy.AhoyQuerySingleAdapter.SendAddress">
            <summary>
            Gets the send address.
            </summary>
            <value>The send address.</value>
            <autogeneratedoc />
            TODO Edit XML Comment Template for SendAddress
        </member>
        <member name="P:Rug.Osc.Ahoy.AhoyQuerySingleAdapter.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Rug.Osc.Ahoy.AhoyServiceInfo"/> at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>AhoyServiceInfo.</returns>
            <autogeneratedoc />
            TODO Edit XML Comment Template for this
        </member>
        <member name="E:Rug.Osc.Ahoy.AhoyQuerySingleAdapter.AnyReceived">
            <summary>
            Occurs when a message any received].
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for AnyReceived
        </member>
        <member name="E:Rug.Osc.Ahoy.AhoyQuerySingleAdapter.MessageReceived">
            <summary>
            Occurs when [message received].
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for MessageReceived
        </member>
        <member name="E:Rug.Osc.Ahoy.AhoyQuerySingleAdapter.MessageSent">
            <summary>
            Occurs when a message is sent.
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for MessageSent
        </member>
        <member name="E:Rug.Osc.Ahoy.AhoyQuerySingleAdapter.ServiceDiscovered">
            <summary>
            Occurs when a new service is discovered.
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for NewServiceDiscovered
        </member>
        <member name="E:Rug.Osc.Ahoy.AhoyQuerySingleAdapter.ServiceExpired">
            <summary>
            Occurs when a service expires.
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for ServiceExpired
        </member>
        <member name="M:Rug.Osc.Ahoy.AhoyQuerySingleAdapter.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Rug.Osc.Ahoy.AhoyQuerySingleAdapter"/> class.
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
        <member name="M:Rug.Osc.Ahoy.AhoyQuerySingleAdapter.#ctor(System.String,System.Net.IPAddress,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Rug.Osc.Ahoy.AhoyQuerySingleAdapter"/> class.
            </summary>
            <param name="networkAdapterIPAddress">The local address.</param>
            <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
        <member name="M:Rug.Osc.Ahoy.AhoyQuerySingleAdapter.BeginSearch(System.Int32)">
            <summary>
            Begins the search.
            </summary>
            <param name="sendInterval">The interval.</param>
            <autogeneratedoc />
            TODO Edit XML Comment Template for BeginSearch
        </member>
        <member name="M:Rug.Osc.Ahoy.AhoyQuerySingleAdapter.EndSearch">
            <summary>
            Ends the search.
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for EndSearch
        </member>
        <member name="M:Rug.Osc.Ahoy.AhoyQuerySingleAdapter.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
            <autogeneratedoc />
            TODO Edit XML Comment Template for GetEnumerator
        </member>
        <member name="M:Rug.Osc.Ahoy.AhoyQuerySingleAdapter.Search(System.Int32,System.Int32)">
            <summary>
            Searches the specified interval.
            </summary>
            <param name="sendInterval">The interval in milliseconds.</param>
            <param name="timeout">Search period in milliseconds.</param>
            <exception cref="T:System.Exception">
            A asynchronous search is already in progress.
            or
            Could not complete ahoy query.
            </exception>
            <autogeneratedoc />
            TODO Edit XML Comment Template for Search
        </member>
        <member name="T:Rug.Osc.Ahoy.AhoyServiceInfo">
            <summary>
            Ahoy Service Information
            </summary>
        </member>
        <member name="F:Rug.Osc.Ahoy.AhoyServiceInfo.Address">
            <summary>
            The address
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for Address
        </member>
        <member name="F:Rug.Osc.Ahoy.AhoyServiceInfo.Descriptor">
            <summary>
            The descriptor
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for Descriptor
        </member>
        <member name="F:Rug.Osc.Ahoy.AhoyServiceInfo.ListenPort">
            <summary>
            The listen port
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for ListenPort
        </member>
        <member name="F:Rug.Osc.Ahoy.AhoyServiceInfo.Namespace">
            <summary>
            The namespace
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for Namespace
        </member>
        <member name="F:Rug.Osc.Ahoy.AhoyServiceInfo.Properties">
            <summary>
            The properties
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for Properties
        </member>
        <member name="F:Rug.Osc.Ahoy.AhoyServiceInfo.SendPort">
            <summary>
            The send port
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for SendPort
        </member>
        <member name="P:Rug.Osc.Ahoy.AhoyServiceInfo.ExpiryDateTime">
            <summary>
            The time stamp of most recent message.
            </summary>
        </member>
        <member name="M:Rug.Osc.Ahoy.AhoyServiceInfo.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32,System.Int32,System.String,System.String,System.Object[],System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Rug.Osc.Ahoy.AhoyServiceInfo"/> struct.
            </summary>
            <param name="address">The address.</param>
            <param name="listenPort">The listen port.</param>
            <param name="sendPort">The send port.</param>
            <param name="descriptor">The descriptor.</param>
            <param name="namespace">The namespace.</param>
            <param name="properties">The properties.</param>
            <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
        <member name="M:Rug.Osc.Ahoy.AhoyServiceInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The object to compare with the current instance.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
            <autogeneratedoc />
            TODO Edit XML Comment Template for Equals
        </member>
        <member name="M:Rug.Osc.Ahoy.AhoyServiceInfo.Equals(Rug.Osc.Ahoy.AhoyServiceInfo)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
            <autogeneratedoc />
            TODO Edit XML Comment Template for Equals
        </member>
        <member name="M:Rug.Osc.Ahoy.AhoyServiceInfo.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
            <autogeneratedoc />
            TODO Edit XML Comment Template for GetHashCode
        </member>
        <member name="M:Rug.Osc.Ahoy.AhoyServiceInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
            <autogeneratedoc />
            TODO Edit XML Comment Template for ToString
        </member>
        <member name="T:Rug.Osc.Ahoy.AhoyService">
            <summary>
            Class AhoyService.
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for AhoyService
        </member>
        <member name="F:Rug.Osc.Ahoy.AhoyService.Descriptor">
            <summary>
            The descriptor
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for Descriptor
        </member>
        <member name="F:Rug.Osc.Ahoy.AhoyService.ListenPort">
            <summary>
            The listen port
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for ListenPort
        </member>
        <member name="F:Rug.Osc.Ahoy.AhoyService.SendPort">
            <summary>
            The send port
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for SendPort
        </member>
        <member name="M:Rug.Osc.Ahoy.AhoyService.#ctor(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rug.Osc.Ahoy.AhoyService"/> class.
            </summary>
            <param name="descriptor">The descriptor.</param>
            <param name="sendPort">The send port.</param>
            <param name="listenPort">The listen port.</param>
            <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
        <member name="T:Rug.Osc.Ahoy.AhoyServiceProvider">
            <summary>
            Class AhoyServiceProvider.
            </summary>
            <seealso cref="T:System.IDisposable" />
            <autogeneratedoc />
            TODO Edit XML Comment Template for AhoyServiceProvider
        </member>
        <member name="E:Rug.Osc.Ahoy.AhoyServiceProvider.MessageReceived">
            <summary>
            Occurs when [message received].
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for MessageReceived
        </member>
        <member name="E:Rug.Osc.Ahoy.AhoyServiceProvider.MessageSent">
            <summary>
            Occurs when [message sent].
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for MessageSent
        </member>
        <member name="M:Rug.Osc.Ahoy.AhoyServiceProvider.#ctor(System.Net.IPAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:Rug.Osc.Ahoy.AhoyServiceProvider"/> class.
            </summary>
            <param name="adapterAddress">The adapter address.</param>
            <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
        <member name="M:Rug.Osc.Ahoy.AhoyServiceProvider.Add(Rug.Osc.Ahoy.AhoyService)">
            <summary>
            Adds the specified service.
            </summary>
            <param name="service">The service.</param>
            <autogeneratedoc />
            TODO Edit XML Comment Template for Add
        </member>
        <member name="M:Rug.Osc.Ahoy.AhoyServiceProvider.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for Dispose
        </member>
        <member name="M:Rug.Osc.Ahoy.AhoyServiceProvider.Remove(Rug.Osc.Ahoy.AhoyService)">
            <summary>
            Removes the specified service.
            </summary>
            <param name="service">The service.</param>
            <autogeneratedoc />
            TODO Edit XML Comment Template for Remove
        </member>
        <member name="M:Rug.Osc.Ahoy.AhoyServiceProvider.Start">
            <summary>
            Starts this instance.
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for Start
        </member>
        <member name="M:Rug.Osc.Ahoy.AhoyServiceProvider.Stop">
            <summary>
            Stops this instance.
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for Stop
        </member>
        <member name="T:Rug.Osc.Ahoy.IAhoyQuery">
            <summary>
            Interface IAhoyQuery
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for IAhoyQuery
        </member>
        <member name="P:Rug.Osc.Ahoy.IAhoyQuery.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Rug.Osc.Ahoy.AhoyServiceInfo"/> at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>AhoyServiceInfo.</returns>
            <autogeneratedoc />
            TODO Edit XML Comment Template for this
        </member>
        <member name="P:Rug.Osc.Ahoy.IAhoyQuery.Namespace">
            <summary>
            Gets the namespace.
            </summary>
            <value>The namespace.</value>
        </member>
        <member name="P:Rug.Osc.Ahoy.IAhoyQuery.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
            <autogeneratedoc />
            TODO Edit XML Comment Template for Count
        </member>
        <member name="E:Rug.Osc.Ahoy.IAhoyQuery.AnyReceived">
            <summary>
            Occurs when [any received].
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for AnyReceived
        </member>
        <member name="E:Rug.Osc.Ahoy.IAhoyQuery.MessageReceived">
            <summary>
            Occurs when [message received].
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for MessageReceived
        </member>
        <member name="E:Rug.Osc.Ahoy.IAhoyQuery.MessageSent">
            <summary>
            Occurs when [message sent].
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for MessageSent
        </member>
        <member name="E:Rug.Osc.Ahoy.IAhoyQuery.ServiceDiscovered">
            <summary>
            Occurs when [new service discovered].
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for NewServiceDiscovered
        </member>
        <member name="E:Rug.Osc.Ahoy.IAhoyQuery.ServiceExpired">
            <summary>
            Occurs when a service expires.
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for ServiceExpired
        </member>
        <member name="M:Rug.Osc.Ahoy.IAhoyQuery.BeginSearch(System.Int32)">
            <summary>
            Begins the search.
            </summary>
            <param name="sendInterval">The send interval.</param>
            <autogeneratedoc />
            TODO Edit XML Comment Template for BeginSearch
        </member>
        <member name="M:Rug.Osc.Ahoy.IAhoyQuery.EndSearch">
            <summary>
            Ends the search.
            </summary>
            <autogeneratedoc />
            TODO Edit XML Comment Template for EndSearch
        </member>
        <member name="M:Rug.Osc.Ahoy.IAhoyQuery.BeginEndSearch">
            <summary>
            Begin the end of the search but do not wait for all threads to complete.
            </summary>
        </member>
        <member name="M:Rug.Osc.Ahoy.IAhoyQuery.Search(System.Int32,System.Int32)">
            <summary>
            Searches the specified send interval.
            </summary>
            <param name="sendInterval">The send interval.</param>
            <param name="timeout">The timeout.</param>
            <autogeneratedoc />
            TODO Edit XML Comment Template for Search
        </member>
    </members>
</doc>
